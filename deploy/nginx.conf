# 暂时禁用HTTPS重定向
# server {
#     listen 80;
#     server_name techvault.club www.techvault.club;
#     
#     # 重定向到 HTTPS
#     return 301 https://$host$request_uri;
# }

# 注意: 如果您已经在宝塔面板上配置了SSL，请使用宝塔面板生成的配置文件
# 以下是一个不使用SSL的配置，可以先使用这个确保网站能访问

server {
    listen 80;
    server_name techvault.club www.techvault.club;
    
    # 如果您已经安装了SSL证书，可以取消下面的注释并使用重定向
    # return 301 https://$host$request_uri;
    
    # 以下是不使用SSL的配置
    
    # SSL 优化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # HSTS 配置
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # 网站根目录 - 宝塔面板路径
    root /www/wwwroot/techvault.club;
    index index.html index.php;
    
    # 安全相关的 HTTP 头
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' https://cdnjs.cloudflare.com https://fonts.gstatic.com; connect-src 'self' https://*.techvault.club wss://*.techvault.club;" always;
    
    # 日志配置 - 宝塔面板路径
    access_log /www/wwwlogs/techvault.club.access.log;
    error_log /www/wwwlogs/techvault.club.error.log;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;
    
    # 静态文件缓存
    location ~* \.(jpg|jpeg|gif|png|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        try_files $uri =404;
    }
    
    # PHP 请求处理 - 宝塔面板配置
    location ~ [^/]\.php(/|$) {
        try_files $uri =404;
        fastcgi_pass unix:/tmp/php-cgi-74.sock;
        fastcgi_index index.php;
        include fastcgi.conf;
        include fastcgi_params;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 32 16k;
    }
    
    # 示例 API 代理设置
    location /api/ {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # WebSocket 代理设置
    location /ws/ {
        proxy_pass http://localhost:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # 处理 HTML 文件
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        try_files $uri =404;
    }
    
    # 主要位置块
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 防止访问敏感文件
    location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /www/wwwroot/techvault.club;
    }
}

# HTTP/2 服务器推送配置示例
# 在主要的 location 块中添加：
# location / {
#     http2_push /public/css/styles.css;
#     http2_push /public/js/main.js;
#     http2_push /public/js/components.js;
#     try_files $uri $uri/ /index.php?$query_string;
# }

# 大型上传文件的配置 - 全部注释掉，避免与宝塔面板配置冲突
# client_max_body_size 10M;
# client_body_timeout 120s;
# client_header_timeout 120s;
# keepalive_timeout 120s;
# send_timeout 120s;
# fastcgi_read_timeout 120s;